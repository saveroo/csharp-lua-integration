# .github/workflows/build.yml

name: Build and Release
on:
  push:
    branches:
      - main # Change this to your main branch name
    tags:
      - '*' # Trigger on all tag pushes

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0' # Change this to your target .NET Core version

      - name: Restore dependencies
        run: dotnet restore

      - name: Get Solution Name
        id: get_solution_name
        run: |
          echo ::set-output name=solution_name::$(dotnet sln list | awk -F'\\' 'END{print $1}')
        shell: bash

      - name: Build the application
        run: dotnet build --configuration Release

      - name: Publish the application
        run: dotnet publish -c Release -r win-x64 --self-contained false # Change the runtime identifier as needed

      - name: Create Zip Archive
        run: Compress-Archive -Path "D:\a\csharp-lua-integration\csharp-lua-integration\bin\Release\net6.0-windows\win-x64\publish\*" -DestinationPath "Release.zip" # Use the dynamic zip file name

      - name: Get Tag Name
        id: get_tag_name
        run: echo "Tag name is ${{ env.GITHUB_REF_NAME }}"
      
      # Use Nerdbank.GitVersioning to set version variables: https://github.com/AArnott/nbgv
      - name: Use Nerdbank.GitVersioning to set version variables
        uses: dotnet/nbgv@master
        id: nbgv

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.nbgv.outputs.SimpleVersion }}.${{ steps.nbgv.outputs.VersionRevision }} # Use the dynamic tag name
          release_name: Release ${{ steps.get_tag_name.outputs.stdout }} ${{ steps.nbgv.outputs.SimpleVersion }}.${{ steps.nbgv.outputs.VersionRevision }} # Use the dynamic tag name as the release name
          body: Release notes for ${{ steps.get_tag_name.outputs.stdout }} ${{ steps.nbgv.outputs.SimpleVersion }}.${{ steps.nbgv.outputs.VersionRevision }} # Modify release notes as needed
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Release.zip
          asset_name: Release.zip
          asset_content_type: application/zip
          
#          ${{ steps.get_solution_name.outputs.solution_name }}_${{ steps.nbgv.outputs.SimpleVersion }}.${{ steps.nbgv.outputs.VersionRevision }}_Release.zip